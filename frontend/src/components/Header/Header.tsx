import React, { useEffect, useRef, useState } from "react";
import { useSwipeable } from "react-swipeable";
import { Link } from "react-scroll";
import "./header.scss";
import image from "../../img/image.svg";
import twitter from "../../img/twitter.svg";
import linkedIn from "../../img/linkedIn.svg";

const Header = () => {
  const [open, setOpen] = useState(false);
  const ref = useRef<HTMLDivElement | null>(null);

  useEffect(() => {
    document.addEventListener("click", (e: any) => {
      if (ref.current?.contains(e.target)) {
        return;
      }
      setOpen(false);
    });
  }, []);

  const handlers = useSwipeable({
    onSwipedLeft: () => setOpen(false),
  });

  return (
    <>
      <header className="header">
        <div ref={ref} className="menuWrap">
          <div className="menuButton" onClick={() => setOpen(!open)}>
            <svg
              width="23"
              height="23"
              viewBox="0 0 23 23"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M11.5 19.1667C10.4415 19.1667 9.58337 18.3086 9.58337 17.25C9.58337 16.1915 10.4415 15.3333 11.5 15.3333C12.5586 15.3333 13.4167 16.1915 13.4167 17.25C13.4167 18.3086 12.5586 19.1667 11.5 19.1667ZM11.5 13.4167C10.4415 13.4167 9.58337 12.5586 9.58337 11.5C9.58337 10.4415 10.4415 9.58334 11.5 9.58334C12.5586 9.58334 13.4167 10.4415 13.4167 11.5C13.4167 12.0083 13.2148 12.4959 12.8553 12.8553C12.4959 13.2147 12.0084 13.4167 11.5 13.4167ZM11.5 7.66668C10.4415 7.66668 9.58337 6.80856 9.58337 5.75001C9.58337 4.69146 10.4415 3.83334 11.5 3.83334C12.5586 3.83334 13.4167 4.69146 13.4167 5.75001C13.4167 6.25834 13.2148 6.74585 12.8553 7.1053C12.4959 7.46474 12.0084 7.66668 11.5 7.66668Z"
                fill="white"
                fillOpacity="0.9"
              />
            </svg>
          </div>
          <ul {...handlers} className={open ? "menu open" : "menu"}>
            <li className="menuLogo">
              <div className="subLogo1">
                <svg
                  width="40"
                  height="40"
                  viewBox="0 0 40 40"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M2.88245 19.434H1.38245H2.88245ZM12.5805 11.7538L11.5821 10.6343C11.5608 10.6533 11.54 10.6729 11.5198 10.6931L12.5805 11.7538ZM9.39927 19.434H7.89927H9.39927ZM20.2607 30.2953V31.7953V30.2953ZM31.122 19.434H32.622H31.122ZM20.2607 0.555756C15.2538 0.555756 10.4521 2.5447 6.91174 6.08505L9.03306 8.20637C12.0108 5.22863 16.0495 3.55576 20.2607 3.55576V0.555756ZM6.91174 6.08505C3.37139 9.6254 1.38245 14.4271 1.38245 19.434H4.38245C4.38245 15.2228 6.05532 11.1841 9.03306 8.20637L6.91174 6.08505ZM1.38245 19.434C1.38245 24.4408 3.37139 29.2425 6.91174 32.7829L9.03306 30.6615C6.05532 27.6838 4.38245 23.6451 4.38245 19.434H1.38245ZM6.91174 32.7829C10.4521 36.3232 15.2538 38.3122 20.2607 38.3122V35.3122C16.0495 35.3122 12.0108 33.6393 9.03306 30.6615L6.91174 32.7829ZM20.2607 38.3122C25.2675 38.3122 30.0692 36.3232 33.6096 32.7829L31.4882 30.6615C28.5105 33.6393 24.4718 35.3122 20.2607 35.3122V38.3122ZM33.6096 32.7829C37.1499 29.2425 39.1389 24.4408 39.1389 19.434H36.1389C36.1389 23.6451 34.466 27.6838 31.4882 30.6615L33.6096 32.7829ZM39.1389 19.434C39.1389 14.4271 37.1499 9.6254 33.6096 6.08505L31.4882 8.20637C34.466 11.1841 36.1389 15.2228 36.1389 19.434H39.1389ZM33.6096 6.08505C30.0692 2.5447 25.2675 0.555756 20.2607 0.555756V3.55576C24.4718 3.55576 28.5105 5.22863 31.4882 8.20637L33.6096 6.08505ZM20.2607 17.4126C20.4451 17.4126 20.4926 17.5179 20.3753 17.3958C20.2437 17.259 20.0637 16.9943 19.8418 16.5464C19.6265 16.1117 19.4146 15.5949 19.1839 15.0079C18.9611 14.4414 18.7162 13.797 18.4605 13.1953C18.2038 12.5909 17.9096 11.9644 17.5627 11.4076C17.2225 10.8616 16.7734 10.2868 16.1673 9.88082C15.5148 9.44375 14.7195 9.23215 13.8418 9.40047C13.0225 9.55757 12.2727 10.0184 11.5821 10.6343L13.5789 12.8733C14.048 12.4549 14.318 12.3638 14.4067 12.3468C14.4369 12.341 14.4378 12.3332 14.4977 12.3733C14.604 12.4445 14.7837 12.6204 15.0166 12.9942C15.2427 13.3571 15.4661 13.8193 15.6994 14.3684C15.9338 14.9201 16.1514 15.4938 16.3919 16.1055C16.6243 16.6968 16.8763 17.3185 17.1536 17.8782C17.4243 18.4246 17.7657 19.0101 18.2125 19.4748C18.6734 19.9544 19.3561 20.4126 20.2607 20.4126V17.4126ZM11.5198 10.6931C9.20163 13.0114 7.89927 16.1555 7.89927 19.434H10.8993C10.8993 16.9512 11.8856 14.5701 13.6412 12.8145L11.5198 10.6931ZM7.89927 19.434C7.89927 22.7124 9.20163 25.8566 11.5198 28.1748L13.6412 26.0535C11.8856 24.2979 10.8993 21.9168 10.8993 19.434H7.89927ZM11.5198 28.1748C13.838 30.493 16.9822 31.7953 20.2607 31.7953V28.7953C17.7779 28.7953 15.3968 27.8091 13.6412 26.0535L11.5198 28.1748ZM20.2607 31.7953C23.5391 31.7953 26.6833 30.493 29.0015 28.1748L26.8801 26.0535C25.1245 27.8091 22.7434 28.7953 20.2607 28.7953V31.7953ZM29.0015 28.1748C31.3197 25.8566 32.622 22.7124 32.622 19.434H29.622C29.622 21.9168 28.6357 24.2979 26.8801 26.0535L29.0015 28.1748ZM32.622 19.434C32.622 16.1555 31.3197 13.0114 29.0015 10.6931L26.8801 12.8145C28.6357 14.5701 29.622 16.9512 29.622 19.434H32.622ZM29.0015 10.6931C28.4431 10.1347 27.6818 9.83548 26.8434 10.0071C26.145 10.15 25.6052 10.5825 25.2394 10.939C24.4989 11.661 23.776 12.7862 23.1529 13.7621C22.4771 14.8204 21.8583 15.8063 21.2399 16.5441C20.935 16.9078 20.6801 17.149 20.4767 17.2907C20.2738 17.4321 20.212 17.4126 20.2607 17.4126V20.4126C21.0295 20.4126 21.6841 20.1058 22.1916 19.7522C22.6987 19.399 23.1481 18.9377 23.5391 18.4712C24.3125 17.5484 25.0518 16.3627 25.6814 15.3766C26.3636 14.3082 26.8933 13.5164 27.3337 13.0871C27.5584 12.868 27.591 12.9162 27.4449 12.9461C27.1587 13.0047 26.9293 12.8637 26.8801 12.8145L29.0015 10.6931ZM12.8937 9.78265C11.8242 10.6383 11.0608 11.6455 10.8261 12.8452C10.5887 14.0588 10.948 15.1806 11.5304 16.1395C12.6331 17.9553 14.863 19.7024 17.1875 21.3839C19.6244 23.1465 22.3146 24.9343 24.8227 26.958C27.3204 28.9734 29.4658 31.0937 30.7755 33.3856L33.3802 31.8972C31.7935 29.1204 29.3047 26.7196 26.7066 24.6233C24.1189 22.5354 21.2517 20.6211 18.9458 18.9531C16.5275 17.2039 14.8292 15.7919 14.0946 14.5823C13.7582 14.0284 13.7215 13.6709 13.7703 13.4212C13.8219 13.1576 14.027 12.7178 14.7678 12.1253L12.8937 9.78265ZM27.7145 29.2944C31.5921 26.1923 33.839 22.4415 34.245 18.0198C34.6457 13.6551 33.2317 8.85406 30.2521 3.63973L27.6474 5.12815C30.4605 10.0511 31.5809 14.2233 31.2575 17.7456C30.9394 21.211 29.2038 24.2611 25.8404 26.9518L27.7145 29.2944Z"
                    fill="url(#paint0_linear)"
                  />
                  <path
                    d="M8.22032 32.7968C12.1951 36.7397 18.6648 36.7588 22.6269 32.7966C26.5989 28.8247 26.5989 22.3621 22.6269 18.3902L21.61 17.3733C19.9745 15.7378 19.9745 13.0764 21.61 11.4409C23.2458 9.80515 25.907 9.80539 27.5425 11.4409C28.0105 11.9089 28.7695 11.9089 29.2374 11.4409L31.7799 8.89842C32.2482 8.43018 32.2479 7.67144 31.7799 7.20344C27.808 3.23151 21.3452 3.23128 17.3731 7.20344C13.4011 11.1754 13.4011 17.6384 17.3731 21.6103L18.39 22.6272C20.0257 24.2629 20.0252 26.9239 18.39 28.5591C16.7545 30.1946 14.0935 30.1951 12.4578 28.5594C11.9898 28.0914 11.2308 28.0914 10.7628 28.5594L8.22032 31.1018C7.75256 31.5701 7.75232 32.3288 8.22032 32.7968Z"
                    fill="url(#paint1_linear)"
                    fillOpacity="0.5"
                  />
                  <defs>
                    <linearGradient
                      id="paint0_linear"
                      x1="35.2928"
                      y1="4.05425"
                      x2="6.70565"
                      y2="34.0317"
                      gradientUnits="userSpaceOnUse"
                    >
                      <stop offset="0.027672" stopColor="#FF00F5" />
                      <stop offset="0.967894" stopColor="#00F0FF" stopOpacity="0" />
                    </linearGradient>
                    <linearGradient
                      id="paint1_linear"
                      x1="39.2898"
                      y1="0.0572799"
                      x2="8.00903"
                      y2="31.6856"
                      gradientUnits="userSpaceOnUse"
                    >
                      <stop stopColor="white" />
                      <stop offset="0.95427" stopColor="white" stopOpacity="0" />
                    </linearGradient>
                  </defs>
                </svg>
              </div>

              <div className="subLogo2" onClick={() => setOpen(false)}>
                <svg
                  width="23"
                  height="23"
                  viewBox="0 0 23 23"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M17.25 13.4167C16.1915 13.4167 15.3334 12.5586 15.3334 11.5C15.3334 10.4415 16.1915 9.58334 17.25 9.58334C18.3086 9.58334 19.1667 10.4415 19.1667 11.5C19.1667 12.0083 18.9648 12.4959 18.6053 12.8553C18.2459 13.2147 17.7584 13.4167 17.25 13.4167ZM11.5 13.4167C10.4415 13.4167 9.58337 12.5586 9.58337 11.5C9.58337 10.4415 10.4415 9.58334 11.5 9.58334C12.5586 9.58334 13.4167 10.4415 13.4167 11.5C13.4167 12.0083 13.2148 12.4959 12.8553 12.8553C12.4959 13.2147 12.0084 13.4167 11.5 13.4167ZM5.75004 13.4167C4.69149 13.4167 3.83337 12.5586 3.83337 11.5C3.83337 10.4415 4.69149 9.58334 5.75004 9.58334C6.80859 9.58334 7.66671 10.4415 7.66671 11.5C7.66671 12.0083 7.46477 12.4959 7.10533 12.8553C6.74588 13.2147 6.25837 13.4167 5.75004 13.4167Z"
                    fill="white"
                    fillOpacity="0.9"
                  />
                </svg>
              </div>
            </li>
            <li className="menuLink">
              <Link
                className="link"
                to="about"
                smooth={true}
                duration={1000}
                onClick={() => setOpen(false)}
              >
                About
              </Link>
            </li>
            <li className="menuLink">
              <Link
                className="link"
                to="project"
                smooth={true}
                duration={1000}
                onClick={() => setOpen(false)}
              >
                Projects
              </Link>
            </li>
            <li className="menuLink">
              <Link
                className="link"
                to="contact"
                smooth={true}
                duration={1000}
                onClick={() => setOpen(false)}
              >
                Contact
              </Link>
            </li>
          </ul>
        </div>

        <ul className="links">
          <li>
            <Link className="link" to="about" smooth={true} duration={1000}>
              About
            </Link>
          </li>
          <li>
            <Link className="link" to="project" smooth={true} duration={1000}>
              Projects
            </Link>
          </li>
          <li>
            <Link className="link" to="contact" smooth={true} duration={1000}>
              Contact
            </Link>
          </li>
        </ul>

        <img className="logo" src={image} alt="logo" />

        <div className="socials">
          <a
            href="https://twitter.com/0moyise"
            target="_blank"
            rel="noreferrer"
            className="social"
          >
            <img src={twitter} alt="twitter" />
          </a>

          <a
            href="https://www.linkedin.com/in/mahmoud-kane/"
            target="_blank"
            rel="noreferrer"
            className="social"
          >
            <img src={linkedIn} alt="linkedIn" />
          </a>
        </div>
      </header>
    </>
  );
};

export default Header;
